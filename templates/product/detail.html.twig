{% extends 'base.html.twig' %}

{% block stylesheets %}
	{{ parent() }}
	<link href="https://fonts.googleapis.com/css2?family=Krub:wght@400;600;700&display=swap" rel="stylesheet"/>
	<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
	<link href="{{ asset('styles/detailProduct.css') }}" rel="stylesheet"/>
{% endblock %}

{% block title %}
	{{ product.name }}
{% endblock %}

{% block body %}
	<style>
		.btn-pago-simulado {
			background: linear-gradient(135deg, #2d9346, #45b15c);
			color: white;
			padding: 0.75rem 1.5rem;
			border-radius: 4px;
			text-decoration: none;
			display: inline-flex;
			align-items: center;
			gap: 0.5rem;
			font-weight: 600;
			transition: all 0.3s ease;
			border: none;
			cursor: pointer;
			box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
		}

		.btn-pago-simulado:hover {
			background: linear-gradient(135deg, #45b15c, #2d9346);
			transform: translateY(-2px);
			box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
		}

		.btn-pago-simulado i {
			font-size: 1.1rem;
		}

		/* Animación para el botón de pago */
		@keyframes pulse {
			0% {
				transform: scale(1);
			}
			50% {
				transform: scale(1.05);
			}
			100% {
				transform: scale(1);
			}
		}

		.btn-pago-simulado:active {
			animation: pulse 0.3s ease-in-out;
		}
        .stock-information {
            margin: 1.5rem 0;
            padding: 1rem;
            background: #f8f9fa;
            border-radius: 8px;
            border: 1px solid #e9ecef;
        }

        .stock-status {
            display: flex;
            align-items: center;
            gap: 0.5rem;
            margin-bottom: 0.5rem;
        }

        .stock-status i {
            font-size: 1.25rem;
        }

        .stock-empty i { color: #dc3545; }
        .stock-low i { color: #ffc107; }
        .stock-available i { color: #28a745; }

        .status-text {
            font-weight: 600;
        }

        .stock-quantity {
            font-size: 0.9rem;
            color: #6c757d;
        }

        .quantity-controls {
            display: flex;
            align-items: center;
            border: 2px solid #dee2e6;
            border-radius: 6px;
            overflow: hidden;
            width: fit-content;
        }

        .qty-btn {
            padding: 0.5rem 1rem;
            border: none;
            background: #f8f9fa;
            cursor: pointer;
            font-weight: bold;
            transition: all 0.2s;
        }

        .qty-btn:hover {
            background: #e9ecef;
        }

        #quantity {
            width: 60px;
            text-align: center;
            border: none;
            border-left: 2px solid #dee2e6;
            border-right: 2px solid #dee2e6;
            padding: 0.5rem;
        }

        .stock-max {
            font-size: 0.8rem;
            color: #6c757d;
            margin-left: 0.5rem;
        }

        .out-of-stock-message {
            background: #dc3545;
            color: white;
            padding: 1rem;
            border-radius: 6px;
            text-align: center;
            margin-top: 1rem;
        }

        .out-of-stock-message i {
            margin-right: 0.5rem;
        }

        .alerta-carrito {
            display: none;
            position: fixed;
            top: 20px;
            right: 20px;
            padding: 15px 25px;
            border-radius: 5px;
            color: white;
            font-weight: 500;
            z-index: 1000;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            animation: slideIn 0.3s ease-out;
        }

        @keyframes slideIn {
            from {
                transform: translateX(100%);
                opacity: 0;
            }
            to {
                transform: translateX(0);
                opacity: 1;
            }
        }
	</style>
	<div class="producto-detalle-container">
		{% if is_granted('ROLE_INVITADO') and not is_granted('ROLE_USUARIO') %}
			<div class="guest-alert">
				<p>
					<i class="fas fa-info-circle"></i>
					Bienvenido a nuestro catálogo. Para aprovechar todas las funcionalidades,
					<a href="{{ path('app_register') }}">regístrate</a>
					o
					<a href="{{ path('app_login') }}">inicia sesión</a>.
				</p>
			</div>
		{% endif %}

		<div class="producto-detalle-grid nuevo-layout">
			<div class="columna-principal">
				{% if product.image %}
					<div class="producto-detalle-imagen">
						<img src="{{ asset('assets/imagenes/' ~ product.image) }}" alt="{{ product.name }}" class="product-image">
					</div>
				{% endif %}

				<div class="producto-especificaciones">
					<h3>Especificaciones Técnicas</h3>
					<div class="especificaciones-lista">
						<div class="especificacion-item">
							<span class="especificacion-label">Número de Parte</span>
							<span class="especificacion-valor">{{ product.partNumber }}</span>
						</div>

						<div class="especificacion-item">
							<span class="especificacion-label">Marca</span>
							<span class="especificacion-valor">{{ product.brand }}</span>
						</div>

						<div class="especificacion-item">
							<span class="especificacion-label">Tipo de Repuesto</span>
							<span class="especificacion-valor">{{ product.partType|replace({'_': ' '})|title }}</span>
						</div>

						<div class="especificacion-item">
							<span class="especificacion-label">Material</span>
							<span class="especificacion-valor">{{ product.material }}</span>
						</div>

						{% if product.dimensions %}
							<div class="especificacion-item">
								<span class="especificacion-label">Dimensiones(LARGO, ANCHO, ALTO (mm))</span>
								<span class="especificacion-valor">{{ product.dimensions }}</span>
							</div>
						{% endif %}

						{% if product.weight %}
							<div class="especificacion-item">
								<span class="especificacion-label">Peso</span>
								<span class="especificacion-valor">{{ product.weight }}
									kg</span>
							</div>
						{% endif %}

						{% if product.loadCapacity %}
							<div class="especificacion-item">
								<span class="especificacion-label">Capacidad de Carga</span>
								<span class="especificacion-valor">{{ product.loadCapacity }}</span>
							</div>
						{% endif %}

						{% if product.estimatedLifeHours %}
							<div class="especificacion-item">
								<span class="especificacion-label">Vida Útil Estimada</span>
								<span class="especificacion-valor">{{ product.estimatedLifeHours }}
									horas</span>
							</div>
						{% endif %}

						{% if product.mountingType %}
							<div class="especificacion-item">
								<span class="especificacion-label">Tipo de Montaje</span>
								<span class="especificacion-valor">{{ product.mountingType }}</span>
							</div>
						{% endif %}
					</div>
				</div>
			</div>

			<div class="producto-detalle-info">
				<h1 class="producto-detalle-titulo">{{ product.name }}</h1>

				<div class="stock-information">
					<div class="stock-status {{ stockInfo.class }}">
						<i class="fas {{ stockInfo.icon }}"></i>
						<span class="status-text">{{ stockInfo.status }}</span>
					</div>
					<div class="stock-quantity">
						<span class="quantity-available">
							{{ product.quantity > 0 ? product.quantity ~ ' unidades disponibles' : stockInfo.message }}
						</span>
					</div>
				</div>

				<div class="producto-detalle-precio">${{ product.price|number_format(2) }}</div>

				<div class="producto-detalle-descripcion">{{ product.description }}</div>

				{% if product.compatibleModels %}
					<div class="modelos-compatibles">
						<h3>Modelos Compatibles</h3>
						<div class="compatibles-contenido">
							{{ product.compatibleModels|nl2br }}
						</div>
					</div>
				{% endif %}

				{% if product.installationRequirements %}
					<div class="requisitos-instalacion">
						<h3>Requisitos de Instalación</h3>
						<div class="requisitos-contenido">
							{{ product.installationRequirements|nl2br }}
						</div>
					</div>
				{% endif %}

				<div class="producto-acciones">
					<div class="columna-izquierda">
						{% if is_granted('ROLE_USUARIO') and product.quantity > 0 %}
							<div class="cantidad-container">
								<label for="quantity">Cantidad:</label>
								<div class="quantity-controls">
									<button type="button" class="qty-btn" onclick="decrementQuantity()">-</button>
									<input type="number" id="quantity" name="quantity" min="1" max="{{ product.quantity }}" value="1" onchange="validateQuantity(this)" required/>
									<button type="button" class="qty-btn" onclick="incrementQuantity()">+</button>
								</div>
								<span class="stock-max">Máx:
									{{ product.quantity }}</span>
							</div>
						{% endif %}

						{% if is_granted('ROLE_INVITADO') %}
							<a href="{{ path('app_login') }}" class="btn-guest">
								<i class="fas fa-heart"></i>
								Agregar a Favoritos
							</a>
						{% elseif is_granted('ROLE_USUARIO') %}
							{% if product.id not in favoriteProductIds %}
								<form action="{{ path('add_favorite', { id: product.id }) }}" method="post" class="form-favorito">
									<button type="submit" class="btn-accion btn-favorito">
										<i class="fas fa-heart"></i>
										Agregar a Favoritos
									</button>
								</form>
							{% else %}
								<button class="btn-accion btn-favorito" disabled>
									<i class="fas fa-heart"></i>
									En Favoritos
								</button>
							{% endif %}
						{% endif %}
					</div>

					<div class="columna-derecha">
						{% if is_granted('ROLE_INVITADO') %}
							<a href="{{ path('app_login') }}" class="btn-guest">
								<i class="fas fa-shopping-cart"></i>
								Agregar al Carrito
							</a>
							<a href="{{ path('app_login') }}" class="btn-guest">
								<i class="fas fa-credit-card"></i>
								Comprar Ahora
							</a>
						{% elseif is_granted('ROLE_USUARIO') %}
							{% if product.quantity > 0 %}
								<form action="{{ path('create-preference') }}" method="get" class="form-pago">
									<input type="hidden" name="quantity" id="buyNowQuantity" value="1">
									<button type="submit" class="btn-accion btn-pago">
										<i class="fas fa-credit-card"></i>
										Comprar Ahora
									</button>
								</form>

								<a href="#" class="btn-accion btn-pago-simulado" id="btn-pago-simulado">
									<i class="fas fa-credit-card"></i>
									Pago Simulado
								</a>

								<form id="cartForm" action="{{ path('cart_add_product', { productId: product.id }) }}" method="post" class="form-carrito">
									<input type="hidden" name="quantity" id="cartQuantity" value="1">
									<button type="submit" class="btn-accion btn-carrito">
										<i class="fas fa-shopping-cart"></i>
										Agregar al Carrito
									</button>
								</form>
							{% else %}
								<div class="out-of-stock-message">
									<i class="fas fa-exclamation-circle"></i>
									{{ stockInfo.message }}
								</div>
							{% endif %}
						{% endif %}
					</div>
				</div>
			</div>
		</div>

		<div class="btn-container">
			<a href="{{ path('product_list') }}" class="btn-volver">
				<i class="fas fa-arrow-left"></i>
				Volver al Catálogo
			</a>
		</div>

        <div id="alertaCarrito" class="alerta-carrito"></div>
	</div>
{% endblock %}

{% block javascripts %}
	{{ parent() }}
	 <script>
        // Definir las funciones en el ámbito global
        function decrementQuantity() {
            const input = document.getElementById('quantity');
            const currentValue = parseInt(input.value);
            if (currentValue > 1) {
                input.value = currentValue - 1;
                updateAllQuantities();
            }
        }

        function incrementQuantity() {
            const input = document.getElementById('quantity');
            const currentValue = parseInt(input.value);
            const maxStock = {{ product.quantity }};
            if (currentValue < maxStock) {
                input.value = currentValue + 1;
                updateAllQuantities();
            }
        }

        function validateQuantity(input) {
            const value = parseInt(input.value);
            const maxStock = {{ product.quantity }};
            
            if (isNaN(value) || value < 1) {
                input.value = 1;
            } else if (value > maxStock) {
                input.value = maxStock;
            }
            
            updateAllQuantities();
        }

        function updateAllQuantities() {
            const quantity = document.getElementById('quantity').value;
            const buyNowQuantity = document.getElementById('buyNowQuantity');
            const cartQuantity = document.getElementById('cartQuantity');
            const btnPagoSimulado = document.getElementById('btn-pago-simulado');

			if (buyNowQuantity) buyNowQuantity.value = quantity;
            if (cartQuantity) cartQuantity.value = quantity;
            if (btnPagoSimulado) {
                const baseUrl = "{{ path('purchase_simulate', {'productId': product.id, 'quantity': 1}) }}";
                const newUrl = baseUrl.replace('quantity=1', `quantity=${quantity}`);
                btnPagoSimulado.href = newUrl;
            }
        }

        // El resto del código dentro de DOMContentLoaded
        document.addEventListener('DOMContentLoaded', function() {
            const cartForm = document.getElementById('cartForm');
            const alertaCarrito = document.getElementById('alertaCarrito');
            const quantityInput = document.getElementById('quantity');

            if (cartForm) {
                cartForm.addEventListener('submit', function(event) {
                    event.preventDefault();
                    
                    const formData = new FormData();
                    formData.append('quantity', quantityInput.value);

                    fetch(cartForm.action, {
                        method: 'POST',
                        body: formData,
                        headers: { 'X-Requested-With': 'XMLHttpRequest' }
                    })
                    .then(response => {
                        if (!response.ok) {
                            throw new Error('Error en la respuesta del servidor');
                        }
                        return response.json();
                    })
                    .then(data => {
                        console.log(data);
                        const icon = data.success ? '<i class="fas fa-check-circle"></i> ' : '<i class="fas fa-exclamation-circle"></i> ';
                        alertaCarrito.innerHTML = icon + data.message;
                        alertaCarrito.style.display = 'block';
                        alertaCarrito.style.backgroundColor = data.success ? '#28a745' : '#dc3545';

                        setTimeout(() => {
                            alertaCarrito.style.display = 'none';
                        }, 4000);
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        alertaCarrito.textContent = 'Ocurrió un error inesperado.';
                        alertaCarrito.style.display = 'block';
                        alertaCarrito.style.backgroundColor = '#dc3545';
                    });
                });
            }

            const addToFavoriteButton = document.querySelector('.btn-favorito');
            const favoriteForm = document.querySelector('.form-favorito');
            
            if (addToFavoriteButton && !addToFavoriteButton.disabled && favoriteForm) {
                favoriteForm.addEventListener('submit', function(event) {
                    event.preventDefault();
                    
                    fetch(this.action, {
                        method: 'POST',
                        headers: {
                            'X-Requested-With': 'XMLHttpRequest'
                        }
                    })
                    .then(response => {
                        if (response.ok) {
                            alert('Producto agregado correctamente');
                            addToFavoriteButton.disabled = true;
                            addToFavoriteButton.innerHTML = '<i class="fas fa-heart"></i> En Favoritos';
                        } else {
                            alert('Hubo un error al agregar el producto a favoritos');
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        alert('Hubo un error al procesar la solicitud');
                    });
                });
            }
            
            // Inicializar los valores
            if (quantityInput) {
                updateAllQuantities();
            }
        });
    </script>
{% endblock %}