{% extends 'base.html.twig' %}

{% block stylesheets %}
	{{ parent() }}
	<link href="https://fonts.googleapis.com/css2?family=Krub:wght@400;600;700&display=swap" rel="stylesheet"/>
	<link href="{{ asset('styles/detailProduct.css') }}" rel="stylesheet"/>
{% endblock %}

{% block title %}
	{{ product.name }}
{% endblock %}

{% block body %}
	<div class="producto-detalle-container">
		<div class="producto-detalle-grid">
			{% if product.image %}
				<div class="producto-detalle-imagen">
					<img src="data:image/jpeg;base64,{{ product.image }}" alt="{{ product.name }}"/>
				</div>
			{% endif %}

			<div class="producto-detalle-info">
				<h1 class="producto-detalle-titulo">{{ product.name }}</h1>

				<div class="producto-detalle-precio">${{ product.price|number_format(2) }}</div>

				<div class="producto-detalle-descripcion">{{ product.description }}</div>

				{% if product.specifications is defined and (product.specifications|length) > 0 %}
					<div class="producto-especificaciones">
						<h3>Especificaciones</h3>
						<div class="especificaciones-lista">
							{% for key, value in product.specifications %}
								<div class="especificacion-item">
									<span class="especificacion-label">{{ key }}</span>
									<span class="especificacion-valor">{{ value }}</span>
								</div>
							{% endfor %}
						</div>
					</div>
				{% endif %}

{% if is_granted('ROLE_USUARIO') %}
				<div class="producto-acciones">
					<div class="columna-izquierda">
						<div class="cantidad-container">
							<label for="quantity">Cantidad:</label>
							<input type="number" id="quantity" name="quantity" min="1" max="{{ product.quantity }}" value="1" required/>
						</div>
{% endif %}
						{% if is_granted('ROLE_USUARIO') %}
						<div class="producto-favorito">
							{% if product.id not in favoriteProductIds %}
								<form action="{{ path('add_favorite', { id: product.id }) }}" method="post" class="form-favorito">
									<button type="submit" class="btn-accion btn-favorito">Agregar a Favoritos</button>
								</form>
							{% else %}
								<button class="btn-accion btn-favorito" disabled>En Favoritos</button>
							{% endif %}
              {% endif %}
						</div>
					</div>
					{% if is_granted('ROLE_USUARIO') %}
					<div class="columna-derecha">
						<form action="{{ path('create-preference') }}" method="get" class="form-pago">
							<button type="submit" class="btn-accion btn-pago">Pagar</button>
						</form>
						
						<form id="cartForm" action="{{ path('cart_add_product', { productId: product.id }) }}" method="post" class="form-carrito">
							<button type="submit" class="btn-accion btn-carrito">Agregar al carrito</button>
						</form>
					</div>
					<div id="alertaCarrito" class="alerta" style="display: none;"></div>
				{% endif %}
        </div>
			</div>
		</div>

		<div class="btn-container">
			<a href="{{ path('product_list') }}" class="btn-volver">Volver</a>
		</div>
	</div>
{% endblock %}

{% block javascripts %} 
  <script>
    document.addEventListener('DOMContentLoaded', function () {
    const cartForm = document.getElementById('cartForm');
    const alertaCarrito = document.getElementById('alertaCarrito');
    const quantityInput = document.getElementById('quantity');

    cartForm.addEventListener('submit', function (event) { 
        event.preventDefault();
        
        const formData = new FormData();
        formData.append('quantity', quantityInput.value);

        fetch(cartForm.action, {
            method: 'POST',
            body: formData,
            headers: { 'X-Requested-With': 'XMLHttpRequest' }
        })
        .then(response => {
            if (!response.ok) {
                throw new Error('Error en la respuesta del servidor');
            }
            return response.json();
        })
        .then(data => {
            console.log(data);
            alertaCarrito.textContent = data.message;
            alertaCarrito.style.display = 'block';
            alertaCarrito.style.backgroundColor = data.success ? 'green' : 'red';

            setTimeout(() => {
                alertaCarrito.style.display = 'none';
                
            }, 4000);
        })
        .catch(error => {
            console.error('Error:', error);
            alertaCarrito.textContent = 'Ocurri√≥ un error inesperado.';
            alertaCarrito.style.display = 'block';
            alertaCarrito.style.backgroundColor = 'red';
        });
    });
});
  </script>
  <script>
    document.addEventListener('DOMContentLoaded', function () {
      const addToCartButton = document.querySelector('.btn-carrito')
      const addToFavoriteButton = document.querySelector('.btn-favorito')
      const favoriteForm = document.querySelector('.form-favorito')
      
      addToCartButton.addEventListener('click', function () {
        console.log('Producto agregado al carrito')
      })
      
      if (addToFavoriteButton && !addToFavoriteButton.disabled && favoriteForm) {
        favoriteForm.addEventListener('submit', function (event) {
          event.preventDefault()
          
          fetch(this.action, {
            method: 'POST',
            headers: {
              'X-Requested-With': 'XMLHttpRequest'
            }
          })
          .then(response => {
            if (response.ok) {
              alert('Producto agregado correctamente')
              
              addToFavoriteButton.disabled = true
              addToFavoriteButton.textContent = 'En Favoritos'
            } else {
              alert('Hubo un error al agregar el producto a favoritos')
            }
          })
          .catch(error => {
            console.error('Error:', error)
            alert('Hubo un error al procesar la solicitud')
          })
        })
      }
    })
  </script>
{% endblock %}